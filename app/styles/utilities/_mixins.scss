@mixin hide {
  left: -9999px;
  position: absolute;
}

@mixin retina {
  @media (min--moz-device-pixel-ratio: 1.3), (-o-min-device-pixel-ratio: 2.6 / 2), (-webkit-min-device-pixel-ratio: 1.3), (min-device-pixel-ratio: 1.3), (min-resolution: 1.3dppx) {
    @content;
  }
}

@mixin data-uri-bg($image, $properties: false) {
  @if $properties == false {
    background-image: inline-image($image);
    *background-image: image-url($image);
  }
  @else {
    background: inline-image($image) $properties;
    *background: image-url($image) $properties;
  }
}

@mixin max-width($width) {
  @media (max-width: $width) {
    @content;
  }
}

@mixin min-width($width) {
  @media (min-width: $width) {
    @content;
  }
}

@mixin max-height($height) {
  @media (max-height: $height) {
    @content;
  }
}

@mixin min-height($height) {
  @media (min-height: $height) {
    @content;
  }
}

@mixin hocus {
  &:active,
  &:focus,
  &:hover {
    @content;
  }
}

@mixin transition($properties: all, $duration: .3s, $easing: ease-out) {
  @if length($properties) > 1 {
    transition-property: $properties;
    transition-duration: $duration;
    transition-timing-function: $easing;
  } @else {
    transition: $properties $duration $easing;
  }
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  border-radius: $radius;
  background-clip: padding-box;  /* stops bg color from leaking outside the border: */
}

@mixin box-sizing($box-model) {
  -webkit-box-sizing: $box-model; // Safari <= 5
     -moz-box-sizing: $box-model; // Firefox <= 19
          box-sizing: $box-model;
}

@mixin hide-text{
    font: 0/0 a;
    text-shadow: none;
    color: transparent;
}
